import os
import shutil

# Define file categories and their extensions
FILE_CATEGORIES = {
    "Images": [".jpg", ".jpeg", ".png", ".gif", ".bmp"],
    "Documents": [".pdf", ".doc", ".docx", ".txt", ".ppt", ".pptx", ".xls", ".xlsx"],
    "Videos": [".mp4", ".avi", ".mov", ".mkv"],
    "Music": [".mp3", ".wav", ".aac", ".flac"],
    "Archives": [".zip", ".rar", ".tar", ".gz"],
    "Programs": [".exe", ".msi", ".dmg", ".pkg"],
    "Others": []
}

# Function to organize files in a specified folder
def organize_files(folder_path):
    if not os.path.exists(folder_path):
        print(f"Error: The folder '{folder_path}' does not exist.")
        return

    # Create category folders if they don't exist
    for category in FILE_CATEGORIES.keys():
        category_path = os.path.join(folder_path, category)
        if not os.path.exists(category_path):
            os.makedirs(category_path)

    # Move files into categorized folders
    for file_name in os.listdir(folder_path):
        file_path = os.path.join(folder_path, file_name)

        # Skip if it's a directory
        if os.path.isdir(file_path):
            continue

        # Get file extension
        _, file_extension = os.path.splitext(file_name)
        file_extension = file_extension.lower()

        # Find the correct category
        moved = False
        for category, extensions in FILE_CATEGORIES.items():
            if file_extension in extensions:
                shutil.move(file_path, os.path.join(folder_path, category, file_name))
                print(f"Moved {file_name} → {category}/")
                moved = True
                break

        # If no matching category, move to 'Others'
        if not moved:
            shutil.move(file_path, os.path.join(folder_path, "Others", file_name))
            print(f"Moved {file_name} → Others/")

    print("\n✅ File organization complete!")

# Main function
if __name__ == "__main__":
    folder_to_organize = input("Enter the folder path to organize: ").strip()
    organize_files(folder_to_organize)
